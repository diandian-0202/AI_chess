Index: frontend/src/pages/LoginPage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\r\nimport { Box, Button, Container, TextField, Typography } from \"@mui/material\";\r\nimport gomokuBg from \"../assets/Gomoku_bg.jpg\";\r\n\r\nfunction LoginPage({ handleLoginSuccess }) {\r\n  const [username, setUsername] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const handleLogin = async () => {\r\n    if (!username.trim() || !password.trim()) {\r\n      alert(\"Username and Password cannot be empty!\");\r\n      return; // Exit the function if validation fails\r\n    }\r\n\r\n    try {\r\n      const credentials = { username, password }; // Package credentials\r\n      const resp = await login(credentials); // Call login API\r\n      console.log(\"Login successful:\", resp);\r\n      handleLoginSuccess(resp.token); // Pass user info to parent component\r\n    } catch (error) {\r\n      console.error(\"Error during login:\", error.message);\r\n      alert(\"Failed to login. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    if (!username.trim() || !password.trim()) {\r\n      alert(\"Username and Password cannot be empty!\");\r\n      return; // Exit the function if validation fails\r\n    }\r\n\r\n    try {\r\n      const credentials = { username, password }; // Package credentials\r\n      const response = await register(credentials); // Call register API\r\n      console.log(\"Registration successful:\", response);\r\n      alert(\"Registration successful! You can now log in.\");\r\n    } catch (error) {\r\n      console.error(\"Error during registration:\", error.message);\r\n      alert(\"Failed to register. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: \"90vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundImage: `url(${gomokuBg})`,\r\n      }}\r\n    >\r\n      <Container\r\n        maxWidth=\"md\"\r\n        sx={{\r\n          backgroundColor: \"white\",\r\n          borderRadius: \"16px\",\r\n          padding: \"32px\",\r\n          boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.1)\",\r\n          textAlign: \"center\",\r\n          boxSizing: \"border-box\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          sx={{ fontWeight: \"bold\", marginBottom: \"16px\" }}\r\n        >\r\n          Welcome to Gomoku Game!\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body1\"\r\n          sx={{ color: \"#757575\", marginBottom: \"32px\" }}\r\n        >\r\n          Please login to continue\r\n        </Typography>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"16px\",\r\n            marginBottom: \"24px\",\r\n          }}\r\n        >\r\n          <TextField\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)} // Update username\r\n            sx={{\r\n              \"& .MuiOutlinedInput-root\": {\r\n                borderRadius: \"12px\",\r\n              },\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            fullWidth\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)} // Update password\r\n            sx={{\r\n              \"& .MuiOutlinedInput-root\": {\r\n                borderRadius: \"12px\",\r\n              },\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            gap: \"16px\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              background: \"linear-gradient(45deg, #ff8c00, #424242)\",\r\n              color: \"#ffffff\",\r\n              padding: \"12px 24px\",\r\n              borderRadius: \"24px\",\r\n              fontSize: \"16px\",\r\n              fontWeight: \"bold\",\r\n              \"&:hover\": {\r\n                background: \"linear-gradient(45deg, #424242, #ff8c00)\",\r\n              },\r\n            }}\r\n            onClick={handleLogin}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            sx={{\r\n              borderColor: \"#000000\",\r\n              color: \"#000000\",\r\n              padding: \"12px 24px\",\r\n              borderRadius: \"24px\",\r\n              fontSize: \"16px\",\r\n              fontWeight: \"bold\",\r\n              \"&:hover\": {\r\n                borderColor: \"#424242\",\r\n                backgroundColor: \"#f0f0f0\",\r\n              },\r\n            }}\r\n            onClick={handleRegister}\r\n          >\r\n            Register\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/pages/LoginPage.js b/frontend/src/pages/LoginPage.js
--- a/frontend/src/pages/LoginPage.js	
+++ b/frontend/src/pages/LoginPage.js	
@@ -1,11 +1,11 @@
 import React from "react";
+import { login, register } from "../utils";
 import { Box, Button, Container, TextField, Typography } from "@mui/material";
 import gomokuBg from "../assets/Gomoku_bg.jpg";
 
 function LoginPage({ handleLoginSuccess }) {
   const [username, setUsername] = React.useState("");
   const [password, setPassword] = React.useState("");
-
   const handleLogin = async () => {
     if (!username.trim() || !password.trim()) {
       alert("Username and Password cannot be empty!");
@@ -151,8 +151,4 @@
           </Button>
         </Box>
       </Container>
-    </Box>
-  );
-}
-
-export default LoginPage;
+    </B
\ No newline at end of file
